@page "/ChangePassword"

@inject HttpClient Http
@inject NavigationManager NavigationManager
@using TrafficPoliceBlazor.Client.Components
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<AuthorizeView>

    <NotAuthorized>
        <CriminalScum />
    </NotAuthorized>

    <Authorized Context="Auth">
 <div class="centerChangePasswordGrid">
    <h3 class="ChangePasswordHeader">Change Password</h3>
    

    <div class="ChangePasswordBoarder">
        <EditForm Model="@newPass" OnValidSubmit="@changePassword">
        <DataAnnotationsValidator />

            <h7 style="color:red;">@test</h7>
            <div class="errorDivForChangePassword"><ValidationMessage For="@(() => newPass.CurrentPassword)" /></div>
            <div>
                <label for="old">Enter Old Password:</label>
                <InputText id="old" type="password" @bind-Value="@newPass.CurrentPassword" MaxLength="15" />
            </div>

            <div class="errorDivForChangePassword"><ValidationMessage For="@(() => newPass.NewPassword)" /></div>

            <div>
                <label for="new">Enter New Password:</label>
                <InputText id="new" type="password" @bind-Value="@newPass.NewPassword" MaxLength="15" />
            </div>

            <div class="errorDivForChangePassword">
                <ValidationMessage For="@(() => newPass.ConfirmPassword)" />
            </div>

            <div>
                <label for="check">Repeat New Password:</label>
                <InputText id="check" type="password" @bind-Value="@newPass.ConfirmPassword" MaxLength="15" />
            </div>

            <div class="ChangePasswordButtons">
                <button class="button1" type="submit">Change Password</button>
                <button class="button1" @onclick="Goback">Go Back</button>
            </div>

        </EditForm>
    </div>
</div>
    </Authorized>
</AuthorizeView>




